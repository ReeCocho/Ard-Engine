[
    // Pass for rendering shadows.
    (
        name: "ShadowPass",
        bindings: [
            (
                name: "GlobalObjectData",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "object_data", ty: Struct("ObjectData"))),
                )
            ),
            (
                name: "InputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "input_ids", ty: Struct("ObjectId"))),
                )
            ),
            (
                name: "OutputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: None,
                    unbounded_array: Some((name: "output_ids", ty: U16)),
                )
            ),
        ]
    ),
    // Pass used for rendering the HZB.
    (
        name: "HzbPass",
        bindings: [
            (
                name: "GlobalObjectData",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "object_data", ty: Struct("ObjectData"))),
                )
            ),
            (
                name: "InputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "input_ids", ty: Struct("ObjectId"))),
                )
            ),
            (
                name: "OutputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "output_ids", ty: U16)),
                )
            ),
        ]
    ),
    // Pass used for rendering the depth prepass.
    (
        name: "DepthPrepass",
        bindings: [
            (
                name: "GlobalObjectData",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "object_data", ty: Struct("ObjectData"))),
                )
            ),
            (
                name: "InputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "input_ids", ty: Struct("ObjectId"))),
                )
            ),
            (
                name: "OutputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: None,
                    unbounded_array: Some((name: "output_ids", ty: U16)),
                )
            ),
            (
                name: "HzbImage",
                stage: AllGraphics,
                count: "1",
                data: Texture("hzb_image"),
            ),
        ]
    ),
    // Pass used for rendering entities. 
    (
        name: "EntityPass",
        bindings: [
            (
                name: "GlobalObjectData",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "object_data", ty: Struct("ObjectData"))),
                )
            ),
            (
                name: "InputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "input_ids", ty: Struct("ObjectId"))),
                )
            ),
            (
                name: "OutputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: None,
                    unbounded_array: Some((name: "output_ids", ty: U16)),
                )
            ),
            (
                name: "HzbImage",
                stage: AllGraphics,
                count: "1",
                data: Texture("hzb_image"),
            ),
        ]
    ),
    // Pass used for rendering opaque geometry.
    (
        name: "ColorPass",
        bindings: [
            (
                name: "GlobalObjectData",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "object_data", ty: Struct("ObjectData"))),
                )
            ),
            (
                name: "InputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "input_ids", ty: Struct("ObjectId"))),
                )
            ),
            (
                name: "OutputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "output_ids", ty: U16)),
                )
            ),
            // Shadows
            (
                name: "ShadowCascades",
                stage: AllGraphics,
                count: "MAX_SHADOW_CASCADES",
                data: ShadowTextureArray("shadow_cascades")
            ),
            (
                name: "SunShadowInfo",
                stage: AllGraphics,
                count: "1",
                data: Ubo((
                    name: "sun_shadow_info",
                    ty: Struct("SunShadows"),
                ))
            ),
            // Lighting.
            (
                name: "GlobalLightingInfo",
                stage: AllGraphics,
                count: "1",
                data: Ubo((
                    name: "global_lighting",
                    ty: Struct("GlobalLighting"),
                ))
            ),
            (
                name: "Lights",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "lights", ty: Struct("Light"))),
                )
            ),
            (
                name: "LightClusters",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: Some((name: "light_table", ty: Struct("LightTable"))),
                    unbounded_array: None,
                )
            ),
            // Screen images.
            (
                name: "AoImage",
                stage: AllGraphics,
                count: "1",
                data: Texture("ao_image")
            ),
            // IBL.
            (
                name: "DiMap",
                stage: AllGraphics,
                count: "1",
                data: CubeMap("di_map"),
            ),
            (
                name: "EnvMap",
                stage: AllGraphics,
                count: "1",
                data: CubeMap("env_map"),
            ),
            (
                name: "BrdfLut",
                stage: AllGraphics,
                count: "1",
                data: Texture("brdf_lut"),
            )
        ]
    ),
    // Pass used for rendering transparent geometry.
    (
        name: "TransparentPass",
        bindings: [
            (
                name: "GlobalObjectData",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "object_data", ty: Struct("ObjectData"))),
                )
            ),
            (
                name: "InputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "input_ids", ty: Struct("ObjectId"))),
                )
            ),
            (
                name: "OutputIds",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: None,
                    unbounded_array: Some((name: "output_ids", ty: U16)),
                )
            ),
            (
                name: "HzbImage",
                stage: AllGraphics,
                count: "1",
                data: Texture("hzb_image"),
            ),
            // Shadows
            (
                name: "ShadowCascades",
                stage: AllGraphics,
                count: "MAX_SHADOW_CASCADES",
                data: ShadowTextureArray("shadow_cascades")
            ),
            (
                name: "SunShadowInfo",
                stage: AllGraphics,
                count: "1",
                data: Ubo((
                    name: "sun_shadow_info",
                    ty: Struct("SunShadows"),
                ))
            ),
            // Lighting.
            (
                name: "GlobalLightingInfo",
                stage: AllGraphics,
                count: "1",
                data: Ubo((
                    name: "global_lighting",
                    ty: Struct("GlobalLighting"),
                ))
            ),
            (
                name: "Lights",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "lights", ty: Struct("Light"))),
                )
            ),
            (
                name: "LightClusters",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: Some((name: "light_table", ty: Struct("LightTable"))),
                    unbounded_array: None,
                )
            ),
            // Screen images.
            (
                name: "AoImage",
                stage: AllGraphics,
                count: "1",
                data: Texture("ao_image")
            ),
            // IBL.
            (
                name: "DiMap",
                stage: AllGraphics,
                count: "1",
                data: CubeMap("di_map"),
            ),
            (
                name: "EnvMap",
                stage: AllGraphics,
                count: "1",
                data: CubeMap("env_map"),
            ),
            (
                name: "BrdfLut",
                stage: AllGraphics,
                count: "1",
                data: Texture("brdf_lut"),
            )
        ]
    ),
    // Pass used for path tracing.
    (
        name: "PathTracerPass",
        bindings: [
            (
                name: "GlobalObjectData",
                stage: RayTracing,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "object_data", ty: Struct("ObjectData"))),
                )
            ),
            (
                name: "Tlas",
                stage: RayTracing,
                count: "1",
                data: Tlas("tlas"),
            ),
            (
                name: "OutputTex",
                stage: RayTracing,
                count: "1",
                data: StorageImage(
                    field_name: "out_tex",
                    restrict: true,
                    access: ReadWrite,
                    format: Rgba16F,
                )
            ),
            (
                name: "GlobalLightingInfo",
                stage: RayTracing,
                count: "1",
                data: Ubo((
                    name: "global_lighting",
                    ty: Struct("GlobalLighting"),
                ))
            ),
            (
                name: "EnvMap",
                stage: RayTracing,
                count: "1",
                data: CubeMap("env_map"),
            ),
        ]
    ),
    // Mesh data.
    (
        name: "MeshData",
        bindings: [
            (
                name: "Indices",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "v_indices", ty: U32)),
                )
            ),
            (
                name: "Positions",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "v_positions", ty: Vec4)),
                )
            ),
            (
                name: "Normals",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "v_normals", ty: UVec2)),
                )
            ),
            (
                name: "Tangents",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "v_tangents", ty: UVec2)),
                )
            ),
            (
                name: "UV0",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "v_uv0s", ty: U32)),
                )
            ),
            (
                name: "UV1",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "v_uv1s", ty: U32)),
                )
            ),
            (
                name: "Meshlets",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "v_meshlets", ty: Struct("Meshlet"))),
                )
            ),
            (
                name: "MeshInfoLookup",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "mesh_info", ty: Struct("MeshInfo"))),
                )
            ),
        ]
    ),
    // Per material and texture slot bindings.
    (
        name: "TextureSlots",
        bindings: [
            // Texture slots SSBO
            (
                name: "Slots",
                stage: AllGraphics,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "texture_slots", ty: Array(ty: U16, len: "MAX_TEXTURES_PER_MATERIAL"))),
                )
            )
        ]  
    ),
    // Bindless textures layout.
    (
        name: "Textures",
        bindings: [
            (
                name: "Textures",
                stage: AllGraphics,
                count: "MAX_TEXTURES",
                data: UnboundedTextureArray("textures"),
            )
        ]
    ),
    // Camera including froxels for clustering
    (
        name: "Camera",
        bindings: [
            (
                name: "CameraUbo",
                stage: AllStages,
                count: "1",
                data: Ubo((
                    name: "camera",
                    ty: Array(ty: Struct("Camera"), len: "6"),
                ))
            ),
            (
                name: "CameraFroxels",
                stage: AllStages,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: Some((name: "froxels", ty: Struct("Froxels"))),
                    unbounded_array: None,
                )
            )
        ]
    ),
    // Camera froxel generation.
    (
        name: "FroxelGen",
        bindings: [
            (
                name: "CameraUbo",
                stage: Compute,
                count: "1",
                data: Ubo((
                    name: "camera",
                    ty: Array(ty: Struct("Camera"), len: "6"),
                ))
            ),
            (
                name: "CameraFroxels",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: WriteOnly,
                    inner: Some((name: "froxels", ty: Struct("Froxels"))),
                    unbounded_array: None,
                )
            )
        ]
    ),
    // Hierarchical z-buffer generation.
    (
        name: "HzbGen",
        bindings: [
            (
                name: "InputDepth",
                stage: Compute,
                count: "1",
                data: Texture("input_depth_buffer"),
            ),
            (
                name: "OutputDepth",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "output_depth_buffer",
                    restrict: true,
                    access: WriteOnly,
                    format: R32F,
                )
            )
        ]
    ),
    // Light clustering.
    (
        name: "LightClustering",
        bindings: [
            (
                name: "Lights",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "lights", ty: Struct("Light"))),
                )
            ),
            (
                name: "LightClusters",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: Some((name: "light_table", ty: Struct("LightTable"))),
                    unbounded_array: None,
                )
            )
        ]
    ),
    // Adaptive luminance histogram generation.
    (
        name: "HistogramGen",
        bindings: [
            (
                name: "InputTexture",
                stage: Compute,
                count: "1",
                data: Texture("hdr_src")
            ),
            (
                name: "Histogram",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: Some((name: "histogram", ty: Array(ty: U32, len: "ADAPTIVE_LUM_HISTOGRAM_SIZE"))),
                    unbounded_array: None,
                )
            )
        ]
    ),
    // Adaptive luminance.
    (
        name: "AdaptiveLum",
        bindings: [
            (
                name: "Histogram",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: Some((name: "histogram", ty: Array(ty: U32, len: "ADAPTIVE_LUM_HISTOGRAM_SIZE"))),
                    unbounded_array: None,
                )
            ),
            (
                name: "Luminance",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: Some((name: "out_luminance", ty: F32)),
                    unbounded_array: None,
                )
            )
        ]
    ),
    // Tonemapping.
    (
        name: "Tonemapping",
        bindings: [
            (
                name: "SourceImage",
                stage: Fragment,
                count: "1",
                data: Texture("screen_tex")
            ),
            (
                name: "SourceDepth",
                stage: Fragment,
                count: "1",
                data: Texture("depth_tex")
            ),
            (
                name: "BloomImage",
                stage: Fragment,
                count: "1",
                data: Texture("bloom_image")
            ),
            (
                name: "SunShaftsImage",
                stage: Fragment,
                count: "1",
                data: Texture("sun_shafts_image")
            ),
            (
                name: "Luminance",
                stage: Fragment,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: Some((name: "luminance", ty: F32)),
                    unbounded_array: None,
                )
            )
        ]
    ),
    // Bloom.
    (
        name: "Bloom",
        bindings: [
            (
                name: "SourceImage",
                stage: Fragment,
                count: "1",
                data: Texture("screen_tex")
            )
        ]
    ),
    // Sun shaft epipolar line setup.
    (
        name: "SunShaftLineSetup",
        bindings: [
            (
                name: "SourceDepth",
                stage: Compute,
                count: "1",
                data: Texture("depth_tex")
            ),
            (
                name: "EpipolarLines",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: WriteOnly,
                    inner: None,
                    unbounded_array: Some((name: "epipolar_lines", ty: Struct("SunShaftSample"))),
                )
            ),
            (
                name: "EpipolarSamples",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: WriteOnly,
                    inner: Some((name: "sample_count", ty: U32)),
                    unbounded_array: Some((name: "sample_indices", ty: U32)),
                )
            ),
            (
                name: "GlobalLightingInfo",
                stage: Compute,
                count: "1",
                data: Ubo((
                    name: "global_lighting",
                    ty: Struct("GlobalLighting"),
                ))
            ),
            (
                name: "SunShaftIndirectDispatch",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: WriteOnly,
                    inner: Some((name: "indirect_dispatch", ty: Struct("IndirectDispatch"))),
                    unbounded_array: None,
                )
            ),
        ]
    ),
    // Sun shaft refinement.
    (
        name: "SunShaftRefine",
        bindings: [
            (
                name: "EpipolarLines",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: None,
                    unbounded_array: Some((name: "epipolar_lines", ty: Struct("SunShaftSample"))),
                )
            ),
            (
                name: "EpipolarSamples",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: Some((name: "sample_count", ty: U32)),
                    unbounded_array: Some((name: "sample_indices", ty: U32)),
                )
            ),
            (
                name: "SunShaftIndirectDispatch",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: Some((name: "indirect_dispatch", ty: Struct("IndirectDispatch"))),
                    unbounded_array: None,
                )
            ),
        ]
    ),
    // Sun shaft sampling.
    (
        name: "SunShaftSample",
        bindings: [
            (
                name: "EpipolarLines",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: None,
                    unbounded_array: Some((name: "epipolar_lines", ty: Struct("SunShaftSample"))),
                )
            ),
            (
                name: "EpipolarSamples",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: Some((name: "sample_count", ty: U32)),
                    unbounded_array: Some((name: "sample_indices", ty: U32)),
                )
            ),
            (
                name: "GlobalLightingInfo",
                stage: Compute,
                count: "1",
                data: Ubo((
                    name: "global_lighting",
                    ty: Struct("GlobalLighting"),
                ))
            ),
            (
                name: "ShadowCascades",
                stage: Compute,
                count: "MAX_SHADOW_CASCADES",
                data: ShadowTextureArray("shadow_cascades")
            ),
            (
                name: "SunShadowInfo",
                stage: Compute,
                count: "1",
                data: Ubo((
                    name: "sun_shadow_info",
                    ty: Struct("SunShadows"),
                ))
            )
        ]
    ),
    // Sun shaft interpolation.
    (
        name: "SunShaftInterpolation",
        bindings: [
            (
                name: "EpipolarLines",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: None,
                    unbounded_array: Some((name: "epipolar_lines", ty: Struct("SunShaftSample"))),
                )
            ),
            (
                name: "GlobalLightingInfo",
                stage: Compute,
                count: "1",
                data: Ubo((
                    name: "global_lighting",
                    ty: Struct("GlobalLighting"),
                ))
            ),
            (
                name: "SourceDepth",
                stage: Compute,
                count: "1",
                data: Texture("depth_tex")
            ),
            (
                name: "OutputTex",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "output_tex",
                    restrict: true,
                    access: WriteOnly,
                    format: Rgba16F,
                )
            ),
        ]
    ),
    // FXAA
    (
        name: "FXAA",
        bindings: [
            (
                name: "InputTexture",
                stage: Fragment,
                count: "1",
                data: Texture("screen_tex")
            )
        ]
    ),
    // Diffuse irradiance gathering.
    (
        name: "DiGather",
        bindings: [
            (
                name: "DiSamples",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: WriteOnly,
                    inner: None,
                    unbounded_array: Some((name: "di_samples", ty: Struct("DiCoefficients"))),
                )
            )
        ]
    ),
    // Diffuse irradiance parallel reduction.
    (
        name: "DiParReduce",
        bindings: [
            (
                name: "DiSamples",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: None,
                    unbounded_array: Some((name: "di_samples", ty: Struct("DiCoefficients"))),
                )
            ),
            (
                name: "DiPrefilteringMats",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: WriteOnly,
                    inner: Some((name: "prefiltering_mats", ty: Struct("PrefilteringMatrices"))),
                    unbounded_array: None,
                )
            )
        ]
    ),
    // Diffuse irradiance rendering.
    (
        name: "DiRender",
        bindings: [
            (
                name: "DiPrefilteringMats",
                stage: Fragment,
                count: "1",
                data: Ubo((
                    name: "prefiltering_mats",
                    ty: Struct("PrefilteringMatrices"),
                ))
            )
        ]
    ),
    // Environment map prefiltering.
    (
        name: "EnvPrefilter",
        bindings: [
            (
                name: "EnvMap",
                stage: Fragment,
                count: "1",
                data: CubeMap("env_map"),
            ),
            (
                name: "PrefilterInfo",
                stage: Fragment,
                count: "1",
                data: Ubo((
                    name: "prefilter_info",
                    ty: Struct("EnvPrefilterInfo")
                ))
            ),
        ]
    ),
    // GUI rendering layout
    (
        name: "Gui",
        bindings: [
            (
                name: "Font",
                stage: Fragment,
                count: "1",
                data: Texture("font_texture"),
            ),
            (
                name: "Scene",
                stage: Fragment,
                count: "1",
                data: Texture("scene_texture"),
            ),
        ]
    ),
    // Depth prefiltering layout for GTAO.
    (
        name: "AoDepthPrefilter",
        bindings: [
            (
                name: "SrcDepth",
                stage: Compute,
                count: "1",
                data: Texture("src_depth"),
            ),
            (
                name: "OutDepth0",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "out_depth0",
                    restrict: true,
                    access: WriteOnly,
                    format: R32F,
                )
            ),
            (
                name: "OutDepth1",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "out_depth1",
                    restrict: true,
                    access: WriteOnly,
                    format: R32F,
                )
            ),
            (
                name: "OutDepth2",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "out_depth2",
                    restrict: true,
                    access: WriteOnly,
                    format: R32F,
                )
            ),
            (
                name: "OutDepth3",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "out_depth3",
                    restrict: true,
                    access: WriteOnly,
                    format: R32F,
                )
            ),
            (
                name: "OutDepth4",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "out_depth4",
                    restrict: true,
                    access: WriteOnly,
                    format: R32F,
                )
            ),
        ]
    ),
    // Main pass for GTAO.
    (
        name: "AoMainPass",
        bindings: [
            (
                name: "SrcDepth",
                stage: Compute,
                count: "1",
                data: Texture("src_depth"),
            ),
            (
                name: "Noise",
                stage: Compute,
                count: "1",
                data: UTexture("noise_tex"),
            ),
            (
                name: "Edges",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "out_edges",
                    restrict: true,
                    access: WriteOnly,
                    format: R8,
                )
            ),
            (
                name: "WorkingAo",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "out_working_ao",
                    restrict: true,
                    access: WriteOnly,
                    format: R16F,
                )
            ),
        ]
    ),
    // Denoise pass for GTAO.
    (
        name: "AoDenoisePass",
        bindings: [
            (
                name: "SrcDepth",
                stage: Compute,
                count: "1",
                data: Texture("src_depth"),
            ),
            (
                name: "Edges",
                stage: Compute,
                count: "1",
                data: Texture("in_edges")
            ),
            (
                name: "OutputAo",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "out_ao",
                    restrict: true,
                    access: WriteOnly,
                    format: R16F,
                )
            ),
        ]
    ),
    // Bilateral filter pass for GTAO.
    (
        name: "AoBilateralFilterPass",
        bindings: [
            (
                name: "SourceAo",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "src_ao",
                    restrict: true,
                    access: ReadOnly,
                    format: R16F,
                )
            ),
            (
                name: "OutputAo",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "out_ao",
                    restrict: true,
                    access: WriteOnly,
                    format: R16F,
                )
            ),
        ]
    ),
    // SMAA edge reset.
    (
        name: "SmaaResetEdges",
        bindings: [
            (
                name: "Indirect",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: WriteOnly,
                    inner: Some((name: "indirect_dispatch", ty: Struct("IndirectDispatch"))),
                    unbounded_array: None,
                )
            ),
            (
                name: "Edges",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: WriteOnly,
                    inner: Some((name: "edge_count", ty: U32)),
                    unbounded_array: Some((name: "edges", ty: U32)),
                )
            ),
        ]
    ),
    // SMAA edge construction.
    (
        name: "SmaaEdgeDetect",
        bindings: [
            (
                name: "Indirect",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: Some((name: "indirect_dispatch", ty: Struct("IndirectDispatch"))),
                    unbounded_array: None,
                )
            ),
            (
                name: "EdgeBuffer",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadWrite,
                    inner: Some((name: "edge_count", ty: U32)),
                    unbounded_array: Some((name: "out_edges", ty: U32)),
                )
            ),
            (
                name: "EdgeTexture",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "edge_tex",
                    restrict: true,
                    access: WriteOnly,
                    format: Rg8UNorm,
                )
            ),
            (
                name: "Source",
                stage: Compute,
                count: "1",
                data: Texture("color_tex"),
            )
        ]
    ),
    // SMAA weights.
    (
        name: "SmaaWeights",
        bindings: [
            (
                name: "EdgeBuffer",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: ReadOnly,
                    inner: Some((name: "edge_count", ty: U32)),
                    unbounded_array: Some((name: "in_edges", ty: U32)),
                )
            ),
            (
                name: "EdgeTexture",
                stage: Compute,
                count: "1",
                data: Texture("edge_tex")
            ),
            (
                name: "BlendTexture",
                stage: Compute,
                count: "1",
                data: StorageImage(
                    field_name: "blend_tex",
                    restrict: true,
                    access: WriteOnly,
                    format: Rgba8UNorm,
                )
            ),
            (
                name: "SearchTex",
                stage: Compute,
                count: "1",
                data: Texture("search_tex")
            ),
            (
                name: "AreaTex",
                stage: Compute,
                count: "1",
                data: Texture("area_tex")
            ),
        ]
    ),
    // SMAA blending.
    (
        name: "SmaaBlend",
        bindings: [
            (
                name: "Source",
                stage: Fragment,
                count: "1",
                data: Texture("src_tex"),
            ),
            (
                name: "Blend",
                stage: Fragment,
                count: "1",
                data: Texture("blend_tex"),
            ),
        ]
    ),
    // Entity selection.
    (
        name: "EntitySelect",
        bindings: [
            (
                name: "Src",
                stage: Compute,
                count: "1",
                data: UTexture("entity_map"),
            ),
            (
                name: "Dst",
                stage: Compute,
                count: "1",
                data: Ssbo(
                    restrict: true,
                    access: WriteOnly,
                    inner: Some((name: "dst", ty: U32)),
                    unbounded_array: None,
                )
            ),
        ]
    )
]